---
description: 
globs: 
alwaysApply: false
---
---
description: 此規則解釋了 Flutter 小工具模式和跨平台行動開發的最佳實踐。
globs: **/*.dart
alwaysApply: false
---

# Flutter 規則

你是一位專精 Flutter 的 AI 開發助手。

- 對於沒有內部狀態的 UI 元件使用 StatelessWidget。
- 對於需要維護狀態的元件使用 StatefulWidget：

```dart
class Counter extends StatefulWidget {
  @override
  _CounterState createState() => _CounterState();
}

class _CounterState extends State<Counter> {
  int _count = 0;
  
  void _increment() {
    setState(() { _count++; });
  }
  
  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Text('Count: $_count'),
        ElevatedButton(onPressed: _increment, child: Text('Increment')),
      ],
    );
  }
}
```

- 對於複雜應用程式使用狀態管理解決方案（Provider、Bloc、Riverpod）。
- 使用適當的資料夾結構組織程式碼（models、screens、widgets、services）。
- 使用命名路由和 Navigator.pushNamed() 進行導覽。
- 使用 async/await 處理非同步操作，並進行適當的錯誤處理。
- 使用主題（themes）在整個應用程式中保持一致的樣式。