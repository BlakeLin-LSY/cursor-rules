---
description:
globs:
alwaysApply: false
---
# WXML 編寫規範

## 基本語法規範
- 使用小寫標籤名和屬性名
- 屬性值必須用雙引號包圍
- 自閉合標籤使用 `<tag />` 格式
- 保持標籤的正確巢狀和閉合
- 合理使用縮排，保持程式碼層次清晰

## 資料繫結
- 使用 `{{}}` 進行資料繫結，表達式內避免複雜邏輯
- 布林屬性使用 `attr="{{condition}}"` 格式
- 事件繫結使用 `bind:` 或 `catch:` 首碼
- 避免在範本中進行複雜的資料處理，應在 JS 中預處理

## 條件渲染
- 簡單條件使用 `wx:if`，複雜條件在 JS 中處理後繫結布林值
- `wx:if` 與 `hidden` 的選擇：頻繁切換用 `hidden`，條件較少變化用 `wx:if`
- 多條件分支使用 `wx:if`、`wx:elif`、`wx:else`
- 避免過深的條件巢狀，考慮拆分為子元件

##列表渲染
- 必須設定 `wx:key`，優先使用唯一識別碼
- `wx:for-item` 和 `wx:for-index` 使用有意義的名稱
- 避免在迴圈中巢狀複雜邏輯，考慮使用子元件
- 長列表考慮使用虛擬列表或分頁載入

## 元件使用
- 元件標籤名使用 kebab-case 格式
- 屬性傳遞使用描述性名稱
- 事件監聽使用 `bind:` 首碼，事件名使用 kebab-case
- 合理使用 slot 進行內容分發

## 樣式類別名
- 類別名使用 kebab-case 格式
- 避免使用內聯樣式，統一在 WXSS 中定義
- 使用 TDesign 提供的工具類別和元件類別名
- 自訂類別名應具有語意化

## 效能優化
- 減少不必要的節點巢狀
- 合理使用 `wx:if` 和 `hidden` 控制渲染
- 避免在範本中使用複雜表達式
- 圖片懶載入使用 `lazy-load` 屬性

## 無障礙存取
- 為互動元素新增 `aria-label` 屬性
- 使用語意化標籤，如 `button`、`navigator` 等
- 確保鍵盤導覽的可用性
- 為圖片新增 `alt` 屬性描述

## 程式碼組織
- 範本結構應與頁面/元件的邏輯結構保持一致
- 相關的元素應當組織在一起
- 使用註釋標記複雜的範本區塊
- 保持範本的簡潔性，複雜邏輯拆分為子元件
