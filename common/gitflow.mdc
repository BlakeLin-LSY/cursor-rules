---
description: 
globs: 
alwaysApply: false
---
# Gitflow工作流規則

## 主分支

### main（或master）
- 包含生產就緒程式碼
- 永遠不要直接提交到main分支
- 只接受來自以下分支的合併：
  - hotfix/* 分支
  - release/* 分支
- 每次合併後必須使用版本號標記

### develop
- 主開發分支
- 包含最新交付的開發變更
- 功能分支的源分支
- 永遠不要直接提交到develop分支

## 支援分支

### feature/*
- 從develop分支創建
- 合併回：develop
- 命名約定：feature/[issue-id]-描述性名稱
- 示例：feature/123-user-authentication
- 創建PR前必須與develop分支保持同步
- 合併後刪除

### release/*
- 從develop分支創建
- 合併回：
  - main
  - develop
- 命名約定：release/vX.Y.Z
- 示例：release/v1.2.0
- 僅進行bug修復、文件編寫及與發布相關的任務
- 不添加新功能
- 合併後刪除

### hotfix/*
- 從main分支創建
- 合併回：
  - main
  - develop
- 命名約定：hotfix/vX.Y.Z
- 示例：hotfix/v1.2.1
- 僅用於緊急生產環境修復
- 合併後刪除

## 提交資訊

- 格式：`type(scope): description`
- 類型：
  - feat: 新功能
  - fix: Bug修復
  - docs: 文件變更
  - style: 格式調整、缺失分號等
  - refactor: 程式碼重構
  - test: 添加測試
  - chore: 維護任務

## 版本控制

### 語意化版本
- MAJOR版本用於不相容的API變更
- MINOR版本用於向後相容的功能性變更
- PATCH版本用於向後相容的bug修復

## Pull Request規則

1. 所有變更必須透過Pull Request進行
2. 所需批准：至少1個
3. CI檢查必須通過
4. 不允許直接提交到受保護分支（main, develop）
5. 合併前分支必須保持最新
6. 合併後刪除分支

## 分支保護規則

### main和develop
- 要求Pull Request審核
- 要求狀態檢查通過
- 要求分支保持最新
- 限制規則包括管理員
- 禁止強制推送
- 禁止刪除

## 發布流程

1. 從develop創建release分支
2. 更新版本號
3. 修復任何與發布相關的問題
4. 創建PR到main
5. 合併到main後：
   - 標記發布
   - 合併回develop
   - 刪除release分支

## 熱修復流程

1. 從main創建hotfix分支
2. 修復問題
3. 更新patch版本號
4. 創建PR到main
5. 合併到main後：
   - 標記發布
   - 合併回develop
   - 刪除hotfix分支 