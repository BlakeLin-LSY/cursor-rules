---
description: 辅助生成 git 提交信息
globs: 
alwaysApply: false
---
# Git 規則

## 重要原則
- **重要**：不要自動提交 git 程式碼，除非有明確的提示
- 提交前確保程式碼通過所有測試
- 保持提交資訊簡潔明瞭，描述清楚變更內容
- 避免大型提交，盡量將變更分解為小的、相關的提交

## 提交規範
git 提交模板<type>(<scope>): <subject>，具體要求如下：
1. 注意冒號 : 後有空格
2. type 的列舉值有：
- feat: 新增功能
- fix: 修復 bug
- docs: 文件註釋
- style: 程式碼格式(不影響程式碼運行的變動)
- refactor: 重構、優化(既不增加新功能, 也不是修復bug)
- perf: 效能優化
- test: 增加測試
- chore: 建構過程或輔助工具的變動
- revert: 回退
- build: 打包
3. 若 subject 中描述超過兩種要點，請使用要點列表描述詳情，每個要點使用-符號開頭，多個換行，參考如下樣例：
```
feat(web): implement email verification workflow

- Add email verification token generation service
- Create verification email template with dynamic links
- Add API endpoint for token validation
- Update user model with verification status field
```

## 分支管理
- main/master: 主分支，保持穩定可發布狀態
- develop: 開發分支，包含最新開發特性
- feature/*: 功能分支，用於開發新功能
- bugfix/*: 修復分支，用於修復bug
- release/*: 發布分支，用於準備發布

**常用分支命名約定**：

| 分支類型   | 命名格式             | 示例                      |
| ---------- | -------------------- | ------------------------- |
| 功能分支   | feature/[描述]       | feature/user-auth         |
| 修復分支   | fix/[問題ID]-[描述]  | fix/issue-42-login-crash  |
| 發布分支   | release/[版本]       | release/v2.1.0            |
| 熱修復分支 | hotfix/[版本]-[描述] | hotfix/v2.0.1-payment-fix |



